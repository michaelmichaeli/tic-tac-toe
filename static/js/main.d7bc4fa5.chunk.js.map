{"version":3,"sources":["helper.js","assets/img/x.svg","assets/img/o.svg","components/Square.js","components/Board.js","assets/img/tic-tac-toe.svg","assets/img/restart.svg","components/Game.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","findIndex","square","scores","X","O","Tie","minimax","board","isMaximizing","result","bestScore","Infinity","score","Math","max","min","Square","value","onClick","style","className","src","x","alt","o","Board","map","Game","useState","Array","fill","history","setHistory","step","setStep","isXsTurn","setIsXsTurn","isAiMode","setIsAiMode","winner","currentPlayer","AIMove","historyPoint","move","bestMove","jumpTo","HistoryMoves","_step","destination","slice","reverse","logo","id","type","name","checked","onChange","htmlFor","data-off","data-on","restart","current","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7bc4fa5.chunk.js","sourcesContent":["export function calculateWinner(squares) {\r\n\tif (!squares) return\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn squares[a];\r\n\t\t}\r\n\t}\r\n\tif (squares.findIndex((square) => square === null) === -1) return \"Tie\";\r\n\treturn null;\r\n}\r\n\r\nexport function bestMove(squares) {\r\n\tlet board = squares;\r\n\tlet bestScore = -Infinity;\r\n\tlet move;\r\n\tfor (let i = 0; i <= 8; i++) {\r\n\t\tif (board[i] === null) {\r\n\t\t\tboard[i] = 'O';\r\n\t\t\tlet score = minimax(board, 0, false);\r\n\t\t\tboard[i] = null;\r\n\t\t\tif (score > bestScore) {\r\n\t\t\t\tbestScore = score;\r\n\t\t\t\tmove = i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn move;\r\n}\r\n\r\nconst scores = {\r\n\tX: -10,\r\n\tO: 10,\r\n\tTie: 0,\r\n};\r\n\r\nfunction minimax(board, isMaximizing) {\r\n\tlet result = calculateWinner(board);\r\n\tif (result !== null) {\r\n    let score = scores[result];\r\n\t\treturn score;\r\n\t}\r\n\tif (isMaximizing) {\r\n\t\tlet bestScore = -Infinity;\r\n\t\tfor (let i = 0; i <= 8; i++) {\r\n\t\t\tif (board[i] === null) {\r\n\t\t\t\tboard[i] = 'O';\r\n\t\t\t\tlet score = minimax(board, false);\r\n\t\t\t\tboard[i] = null;\r\n\t\t\t\tbestScore = Math.max(score, bestScore);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bestScore;\r\n\t} else {\r\n\t\tlet bestScore = Infinity;\r\n\t\tfor (let i = 0; i <= 8; i++) {\r\n\t\t\tif (board[i] === null) {\r\n\t\t\t\tboard[i] = 'X';\r\n\t\t\t\tlet score = minimax(board, true);\r\n\t\t\t\tboard[i] = null;\r\n\t\t\t\tbestScore = Math.min(score, bestScore);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bestScore ;\r\n\t}\r\n}\r\n","export default __webpack_public_path__ + \"static/media/x.507a0b3a.svg\";","export default __webpack_public_path__ + \"static/media/o.31f7f953.svg\";","import React from \"react\";\r\nimport x from \"../assets/img/x.svg\";\r\nimport o from \"../assets/img/o.svg\";\r\n\r\n\r\nconst Square = ({ value, onClick }) => {\r\n\tconst style = value ? `squares ${value}` : `squares`;\r\n\treturn (\r\n\t\t<button onClick={onClick} className={style}>\r\n\t\t\t{value === \"X\" && <img src={x} alt={x} />}\r\n\t\t\t{value === \"O\" && <img src={o} alt={o} />}\r\n\t\t\t{value === \"\" && null}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ squares, onClick }) => {\r\n    return <div className=\"board\">\r\n        {squares.map((square, i) => {\r\n            return <Square\r\n                key={i}\r\n                value={square}\r\n                onClick={()=> onClick(i)}\r\n            />\r\n        })}\r\n    </div>;\r\n};\r\n\r\nexport default Board;","export default __webpack_public_path__ + \"static/media/tic-tac-toe.d9141fe8.svg\";","export default __webpack_public_path__ + \"static/media/restart.5f4733dd.svg\";","import React, { useState } from \"react\";\r\nimport { calculateWinner, bestMove } from \"../helper\";\r\nimport Board from \"./Board\";\r\nimport logo from \"../assets/img/tic-tac-toe.svg\";\r\nimport restart from \"../assets/img/restart.svg\";\r\n\r\nconst Game = () => {\r\n\tconst [history, setHistory] = useState([Array(9).fill(null)]);\r\n\tconst [step, setStep] = useState(0);\r\n\tconst [isXsTurn, setIsXsTurn] = useState(true);\r\n\tconst [isAiMode, setIsAiMode] = useState(true);\r\n\tconst winner = calculateWinner(history[step]);\r\n\tconst currentPlayer = isXsTurn ? \"X\" : \"O\";\r\n\r\n\tconst handleClick = (i) => {\r\n\t\tconst historyPoint = history.slice(0, step + 1);\r\n\t\tconst current = historyPoint[step];\r\n\t\tconst squares = [...current];\r\n\t\tif (winner || squares[i]) return; // don't do anything if one won or occupied\r\n\t\tsquares[i] = currentPlayer;\r\n\t\tsetHistory([...historyPoint, squares]);\r\n\t\tsetStep(historyPoint.length);\r\n\t\tif (isAiMode && !winner) {\r\n\t\t\tAIMove(historyPoint, squares);\r\n\t\t} else {\r\n\t\t\tsetIsXsTurn(!isXsTurn);\r\n\t\t}\r\n\t};\r\n\r\n\tconst AIMove = (historyPoint, squares) => {\r\n\t\t// debugger\r\n\t\tlet aiMoveIndex = bestMove(squares);\r\n\t\tsquares[aiMoveIndex] = \"O\";\r\n\t\tsetHistory([...historyPoint, squares]);\r\n\t\tsetStep(historyPoint.length);\r\n\t};\r\n\r\n\tconst jumpTo = (step) => {\r\n\t\tsetStep(step);\r\n\t\tif (!isAiMode) setIsXsTurn(step % 2 === 0);\r\n\t\telse setIsXsTurn(true);\r\n\t};\r\n\r\n\tconst HistoryMoves = () => {\r\n\t\treturn history\r\n\t\t\t.map((_step, move) => {\r\n\t\t\t\tconst destination = move ? `Go to Move #${move}` : \"Go to Start\";\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li key={move}>\r\n\t\t\t\t\t\t<button onClick={() => jumpTo(move)}>{destination}</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t.slice(0, -1)\r\n\t\t\t.reverse();\r\n\t};\r\n\r\n\tconst toggleAiMode = () => {\r\n\t\tsetIsAiMode(!isAiMode);\r\n\t\tsetHistory([history[0]]);\r\n\t\tjumpTo(0);\r\n\t};\r\n\r\n\tconst onRestart = () => {\r\n\t\tsetHistory([history[0]]);\r\n\t\tjumpTo(0);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"app-container\">\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t<img src={logo} alt={logo} />\r\n\t\t\t\t\t<h1>Tic Tac Toe</h1>\r\n\t\t\t\t\t<h3>With Ai</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"settings\">\r\n\t\t\t\t\t<div id=\"toggles\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tname=\"checkbox1\"\r\n\t\t\t\t\t\t\tid=\"checkbox1\"\r\n\t\t\t\t\t\t\tclassName=\"ios-toggle\"\r\n\t\t\t\t\t\t\tchecked={isAiMode}\r\n\t\t\t\t\t\t\tonChange={toggleAiMode}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\thtmlFor=\"checkbox1\"\r\n\t\t\t\t\t\t\tclassName=\"checkbox-label\"\r\n\t\t\t\t\t\t\tdata-off=\"Ai off\"\r\n\t\t\t\t\t\t\tdata-on=\"Ai on\"\r\n\t\t\t\t\t\t></label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <button onClick={toggleAiMode}>\r\n\t\t\t\t\t\t{isAiMode ? \"Single-Player\" : \"Multiplayer\"}\r\n\t\t\t\t\t</button> */}\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"restart\"\r\n\t\t\t\t\t\tonClick={onRestart}\r\n\t\t\t\t\t\tsrc={restart}\r\n\t\t\t\t\t\talt={restart}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isAiMode || winner && <h3 className=\"next-player\">\r\n\t\t\t\t\t{winner ? \"Winner: \" + winner : \"Next Player: \" + currentPlayer}\r\n\t\t\t\t</h3>}\r\n\t\t\t\t<div className=\"board-wrapper\">\r\n\t\t\t\t\t{/* <div className=\"board-container\"> */}\r\n\t\t\t\t\t<Board squares={history[step]} onClick={handleClick} />\r\n\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t{history.length > 1 && (\r\n\t\t\t\t\t<div className=\"history-wrapper\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>Recent Moves</h3>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<HistoryMoves />\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);"],"sourceRoot":""}